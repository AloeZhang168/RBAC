/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.rbac.action.system;

import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.rbac.common.BaseAction;
import com.rbac.entity.SysAccount;
import com.rbac.entity.SysRole;
import com.rbac.form.system.RoleModifyForm;
import com.rbac.service.AccountService;
import com.rbac.service.RoleService;
import com.rbac.util.CommonUtils;
import com.rbac.util.PasswordHash;

/** 
 * MyEclipse Struts
 * Creation date: 04-25-2014
 * 
 * XDoclet definition:
 * @struts.action path="/roleModify" name="roleModifyForm" input="/system/roleModify.jsp" scope="request" validate="true"
 */
public class RoleModifyAction extends BaseAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		RoleModifyForm roleModifyForm = (RoleModifyForm) form;
		RoleService roleService = (RoleService) super.getBean("roleService");
		if(CommonUtils.isNotBlank(roleModifyForm.getSubmit())){
			SysRole role = new SysRole();
			if(CommonUtils.isNotBlank(roleModifyForm.getId())){
				Long id = CommonUtils.parseLong(roleModifyForm.getId());
				role = roleService.getRoleById(id);
				role.setModifierId(super.getCurrentAccountId(request));
				//就算在mysql中加了current stamp on update，也需要配置hibernate后才能正常运行
				role.setModifyTime(new Date());
			}
			else{
				role.setCreatorId(super.getCurrentAccountId(request));
				role.setCreateTime(new Date());
			}
			role.setRoleDesc(roleModifyForm.getRoleDesc());
			role.setRoleName(roleModifyForm.getRoleName());
			roleService.saveOrUpdateRole(role);
			return mapping.findForward("success");
		}
		return mapping.getInputForward();
	}
}